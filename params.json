{"name":"Minionette","tagline":"A mini Marionette for Backbone.js","body":"Minionette\r\n==========\r\n\r\nA mini Marionette for Backbone.js\r\n\r\nMinionette provides three highly optimized View classes for you to use,\r\n`Minionette.View`, `Minionette.ModelView`, and\r\n`Minionette.CollectionView`. Each class is designed to ease development,\r\nfrom using several performance boosting techniques during rendering to\r\nplacing subviews directly in templates and allowing the subviews to be\r\neasily removed.\r\n\r\n[Minionette.View](/docs/minionette.view.md)\r\n---------------\r\n\r\n`Minionette.View` is the base View class, providing an easy way to\r\nlisten for events on an associated model or collection, an actually\r\nuseful generic rendering function, easy subviews (AKA Regions).\r\n\r\n\r\n[Minionette.Region](/docs/minionette.region.md)\r\n-----------------\r\n\r\n`Minionette.Region`s help manage subviews of a `Minionette.View`,\r\nallowing you to specify directly in a template where a subview should be\r\nattached. A view can have any number of regions, each managing their own\r\npart of the overall view.\r\n\r\n\r\n[Minionette.ModelView](/docs/minionette.modelview.md)\r\n--------------------\r\n\r\n`Minionette.ModelView` is nothing more than `Minionette.View` with two\r\nminor tweaks to easily support rendering models.\r\n\r\n\r\n[Minionette.CollectionView](/docs/minionette.collectionview.md)\r\n-------------------------\r\n\r\n`Minionette.CollectionView` is an optimized `Minionette.View` for your\r\nBackbone collections. It quickly handles rendering using a\r\nDocumentFragment, ensuring at most three content reflows even with\r\nhundreds of models to render. The most important feature of\r\n`CollectionView` is the `#ModelView` property, from which all models\r\nwill have a view instantiated from.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}